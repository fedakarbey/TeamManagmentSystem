// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamManagment.UI.Models.Core.Context;

namespace TeamManagment.UI.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20230904183243_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.Kisi", b =>
                {
                    b.Property<int>("KisiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Soyad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UnvanID")
                        .HasColumnType("int");

                    b.HasKey("KisiID");

                    b.HasIndex("UnvanID");

                    b.ToTable("Kisi");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.OzlukBilgiler", b =>
                {
                    b.Property<int>("KisiID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TCNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("TelefonNo")
                        .HasColumnType("bigint");

                    b.HasKey("KisiID");

                    b.ToTable("OzlukBilgiler");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.Takim", b =>
                {
                    b.Property<int>("TakimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TakimAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TakimID");

                    b.ToTable("Takim");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.TakimKisi", b =>
                {
                    b.Property<int>("TakimKisiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KisiID")
                        .HasColumnType("int");

                    b.Property<int?>("TakimID")
                        .HasColumnType("int");

                    b.HasKey("TakimKisiID");

                    b.HasIndex("KisiID");

                    b.HasIndex("TakimID");

                    b.ToTable("TakimKisi");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.Unvan", b =>
                {
                    b.Property<int>("UnvanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UnvanAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UnvanID");

                    b.ToTable("Unvan");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.Kisi", b =>
                {
                    b.HasOne("TeamManagment.UI.Models.Core.Entites.Unvan", "Unvan")
                        .WithMany("Kisi")
                        .HasForeignKey("UnvanID");

                    b.Navigation("Unvan");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.OzlukBilgiler", b =>
                {
                    b.HasOne("TeamManagment.UI.Models.Core.Entites.Kisi", "Kisi")
                        .WithOne("OzlukBilgiler")
                        .HasForeignKey("TeamManagment.UI.Models.Core.Entites.OzlukBilgiler", "KisiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kisi");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.TakimKisi", b =>
                {
                    b.HasOne("TeamManagment.UI.Models.Core.Entites.Kisi", "Kisi")
                        .WithMany("TakimKisi")
                        .HasForeignKey("KisiID");

                    b.HasOne("TeamManagment.UI.Models.Core.Entites.Takim", "Takim")
                        .WithMany("TakimKisi")
                        .HasForeignKey("TakimID");

                    b.Navigation("Kisi");

                    b.Navigation("Takim");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.Kisi", b =>
                {
                    b.Navigation("OzlukBilgiler");

                    b.Navigation("TakimKisi");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.Takim", b =>
                {
                    b.Navigation("TakimKisi");
                });

            modelBuilder.Entity("TeamManagment.UI.Models.Core.Entites.Unvan", b =>
                {
                    b.Navigation("Kisi");
                });
#pragma warning restore 612, 618
        }
    }
}
